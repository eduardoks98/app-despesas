#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Validating commit message..."

# Get the commit message
commit_regex='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}'

if ! grep -qE "$commit_regex" "$1"; then
  echo "‚ùå Invalid commit message format!"
  echo ""
  echo "The commit message should follow the Conventional Commits format:"
  echo "  <type>[optional scope]: <description>"
  echo ""
  echo "Types:"
  echo "  feat:     A new feature"
  echo "  fix:      A bug fix"
  echo "  docs:     Documentation only changes"
  echo "  style:    Changes that do not affect the meaning of the code"
  echo "  refactor: A code change that neither fixes a bug nor adds a feature"
  echo "  test:     Adding missing tests or correcting existing tests"
  echo "  chore:    Changes to the build process or auxiliary tools"
  echo "  perf:     A code change that improves performance"
  echo "  ci:       Changes to CI configuration files and scripts"
  echo "  build:    Changes that affect the build system or dependencies"
  echo "  revert:   Reverts a previous commit"
  echo ""
  echo "Examples:"
  echo "  feat: add user authentication"
  echo "  fix(api): resolve memory leak in database connection"
  echo "  docs: update README with installation instructions"
  echo ""
  exit 1
fi

echo "‚úÖ Commit message format is valid!"